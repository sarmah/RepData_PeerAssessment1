plot(svd1$v[,1], xlab="Column", ylab="First Right Singular Vector", pch=19)
par(mar = rep(0.2, 4))
image(t(dataMatrix)[,nrow(dataMatrix):1])
plot(svd1$u[,1], 40:1, xlab="Row", ylab="First Left Singular Vector", pch=19)
plot(svd1$v[,1], xlab="Column", ylab="First Right Singular Vector", pch=19)
par( mfrow = c(1,2))
plot(svd1$d, pch=19)
plot(svd1$d^2/sum(svd1$d^2), pch=19)
pca1 <- prcomp(dataMatrixOrdered, scale = T)
plot(pca1$rotation[,1], sva1$v[,1], pch=19)
plot(pca1$rotation[,1], svd1$v[,1], pch=19)
options(editor="internal")
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
install_from_swirl("Exploratory_Data_Analysis")
swirl()
install_packages("fields")
install_package("fields")
install.packages("fields")
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
plot(cx, cy, col = c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
points(cx, cy, col = c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp, 2, which.min)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols2, pch=9, cex=2, lwd=2)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3)
points(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
options(editor="internal")
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
scale(mat)
svd(scale(mat))
prcomp(mat)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$svd
svd2$d
dim(faceData)
a1 <- (svd1$d[1] * svd1$u[,1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- diag(svd1$d[1:2]) %*% svd1$u[,1:2]) %*% t(svd1$v[,1:2])
a2 <- diag(svd1$d[1:2]) %*% svd1$u[,1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & County.Site %in% both)
cnt0 <- subset(pm0, State.Code==36 & County.site %in% both)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0dub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow(1,2), mar=c(4,4,2,1))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, "state")
dim(merge())
dim(merge
)
dim(merge)
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52),mrg[,2], xlim=c(.5,2.5)))
with(mrg, points(rep(2,52),mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
x <- c(50, 75, 99, 37)
y <- c("matt", "mark", "luke", "john")
plot(x,y)
y <- factor(y)
plot(x,y)
plot(y, x)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
print(this_day)
day(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920\1\2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=10, minutes=03)
this_moment
nyc <- now(TZ="America/New_York")
nyc <- now(tz="America/New_York")
nyc
depart <- nyc +days(2)
depart
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
complete <- complete.cases(rawActData)
actData <- rawActData[complete,]
setwd("~/Coursera/Reproducible/RepData_PeerAssessment1")
library(dplyr)
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
complete <- complete.cases(rawActData)
actData <- rawActData[complete,]
str(actData)
impActData <- cbind(impActData, dow="weekday", stringAsFactors=FALSE)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
library(plyr)
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
impActData <- cbind(impActData, dow="weekday", stringAsFactors=FALSE)
str(impActData)
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
impActData <- cbind(impActData, as.character(dow="weekday"))
impActData <- cbind(impActData, dow=as.character("weekday"))
str(impActData)
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
impActData <- cbind(impActData, dow="weekday", stringsAsFactors=FALSE)
str(ipActData)
str(impActData)
length(impActData)
nrows(impActData)
nrow(impActData)
dowVector <- vector(mode="character", length=nrow(impActData))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
impActData <- cbind(impActData, dow=dowVector)
str)impActData)
str(impActData)
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
impActData <- cbind(impActData, dow=dowVector, stringsAsFactors=FALSE)
str(impActData)
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
##complete <- complete.cases(rawActData)
##actData <- rawActData[complete,]
##actData$date <- as.Date(actData$date)
##totDailySteps <- tapply(actData$steps, actData$date, sum)
##totDailyMean <- mean(totDailySteps)
##totDailyMedian <- median(totDailySteps)
## hist(totDailySteps)
##totIntMean <- tapply(actData$steps, actData$interval, mean)
##maxIntName <- names(totIntMean[totIntMean==max(totIntMean)])
##plot(names(totIntMean), totIntMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
library(plyr)
##missSteps <- sum(is.na(rawActData$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
##totImpDailySteps <- tapply(impActData$steps, impActData$date, sum)
##totImpDailyMean <- mean(totDailySteps)
##totImpDailyMedian <- median(totDailySteps)
## hist(totImpDailySteps)
impActData <- cbind(impActData, dow="weekday")
impActData$dow <- as.character(impActData$dow)
logDow <- (weekdays(impActData$date)=="Saturday" |
weekdays(impActData$date)=="Sunday")
impActData[logDow,]$dow <- "weekend"
impActData$dow <- as.factor(impActData$dow)
##totDowMean <- tapply(impActData$steps, impActData$interval ~ impActData$dow, mean)
##plot(names(totDowMean), totDowMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
##totDowMean <- tapply(impActData$steps, impActData$interval ~ impActData$dow, FUN = mean)
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
##complete <- complete.cases(rawActData)
##actData <- rawActData[complete,]
##actData$date <- as.Date(actData$date)
##totDailySteps <- tapply(actData$steps, actData$date, sum)
##totDailyMean <- mean(totDailySteps)
##totDailyMedian <- median(totDailySteps)
## hist(totDailySteps)
##totIntMean <- tapply(actData$steps, actData$interval, mean)
##maxIntName <- names(totIntMean[totIntMean==max(totIntMean)])
##plot(names(totIntMean), totIntMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
library(plyr)
##missSteps <- sum(is.na(rawActData$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
##totImpDailySteps <- tapply(impActData$steps, impActData$date, sum)
##totImpDailyMean <- mean(totDailySteps)
##totImpDailyMedian <- median(totDailySteps)
## hist(totImpDailySteps)
impActData <- cbind(impActData, dow="weekday")
impActData$dow <- as.character(impActData$dow)
logDow <- (weekdays(impActData$date)=="Saturday" |
weekdays(impActData$date)=="Sunday")
impActData[logDow,]$dow <- "weekend"
impActData$dow <- as.factor(impActData$dow)
##totDowMean <- tapply(impActData$steps, impActData$interval ~ impActData$dow, mean)
##plot(names(totDowMean), totDowMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
##totDowMean <- tapply(impActData$steps, impActData$interval ~ impActData$dow, FUN = mean)
str(impActData)
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
complete <- complete.cases(rawActData)
actData <- rawActData[complete,]
actData$date <- as.Date(actData$date)
totDailySteps <- tapply(actData$steps, actData$date, sum)
totDailyMean <- mean(totDailySteps)
totDailyMedian <- median(totDailySteps)
## hist(totDailySteps)
totIntMean <- tapply(actData$steps, actData$interval, mean)
maxIntName <- names(totIntMean[totIntMean==max(totIntMean)])
plot(names(totIntMean), totIntMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
library(plyr)
##missSteps <- sum(is.na(rawActData$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
totImpDailySteps <- tapply(impActData$steps, impActData$date, sum)
totImpDailyMean <- mean(totDailySteps)
totImpDailyMedian <- median(totDailySteps)
## hist(totImpDailySteps)
impActData <- cbind(impActData, dow="weekday")
impActData$dow <- as.character(impActData$dow)
logDow <- (weekdays(impActData$date)=="Saturday" |
weekdays(impActData$date)=="Sunday")
impActData[logDow,]$dow <- "weekend"
impActData$dow <- as.factor(impActData$dow)
##totDowMean <- tapply(impActData$steps, impActData$interval ~ impActData$dow, mean)
##plot(names(totDowMean), totDowMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
##totDowMean <- tapply(impActData$steps, impActData$interval ~ impActData$dow, FUN = mean)
totDowMean <- tapply(impActData$steps, impActData$interval ~ impActData$dow, mean)
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
complete <- complete.cases(rawActData)
actData <- rawActData[complete,]
actData$date <- as.Date(actData$date)
totDailySteps <- tapply(actData$steps, actData$date, sum)
totDailyMean <- mean(totDailySteps)
totDailyMedian <- median(totDailySteps)
## hist(totDailySteps)
totIntMean <- tapply(actData$steps, actData$interval, mean)
maxIntName <- names(totIntMean[totIntMean==max(totIntMean)])
plot(names(totIntMean), totIntMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
library(plyr)
##missSteps <- sum(is.na(rawActData$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
totImpDailySteps <- tapply(impActData$steps, impActData$date, sum)
totImpDailyMean <- mean(totDailySteps)
totImpDailyMedian <- median(totDailySteps)
## hist(totImpDailySteps)
impActData <- cbind(impActData, dow="weekday")
impActData$dow <- as.character(impActData$dow)
logDow <- (weekdays(impActData$date)=="Saturday" |
weekdays(impActData$date)=="Sunday")
impActData[logDow,]$dow <- "weekend"
impActData$dow <- as.factor(impActData$dow)
impDayData <- subset(impActData, dow=="weekday")
impEndData <- subset(impActData, dow=="weekend")
totDayMean <- tapply(impDayData$steps, impDayData$interval, FUN=mean)
totENDMean <- tapply(impEndData$steps, impEndData$interval, FUN=mean)
plot(names(totDayMean), totDayMean, type="l", xlab="5-minute interval", ylab="average number of Weekday steps")
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
complete <- complete.cases(rawActData)
actData <- rawActData[complete,]
actData$date <- as.Date(actData$date)
totDailySteps <- tapply(actData$steps, actData$date, sum)
totDailyMean <- mean(totDailySteps)
totDailyMedian <- median(totDailySteps)
## hist(totDailySteps)
totIntMean <- tapply(actData$steps, actData$interval, mean)
maxIntName <- names(totIntMean[totIntMean==max(totIntMean)])
plot(names(totIntMean), totIntMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
library(plyr)
##missSteps <- sum(is.na(rawActData$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
totImpDailySteps <- tapply(impActData$steps, impActData$date, sum)
totImpDailyMean <- mean(totDailySteps)
totImpDailyMedian <- median(totDailySteps)
## hist(totImpDailySteps)
impActData <- cbind(impActData, dow="weekday")
impActData$dow <- as.character(impActData$dow)
logDow <- (weekdays(impActData$date)=="Saturday" |
weekdays(impActData$date)=="Sunday")
impActData[logDow,]$dow <- "weekend"
impActData$dow <- as.factor(impActData$dow)
impDayData <- subset(impActData, dow=="weekday")
impEndData <- subset(impActData, dow=="weekend")
totDayMean <- tapply(impDayData$steps, impDayData$interval, FUN=mean)
totENDMean <- tapply(impEndData$steps, impEndData$interval, FUN=mean)
plot(names(totDayMean), totDayMean, type="l", xlab="5-minute interval", ylab="average number of Weekday steps")
plot(names(totEndMean), totEndMean, type="l", xlab="5-minute interval", ylab="average number of Weekend steps")
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
complete <- complete.cases(rawActData)
actData <- rawActData[complete,]
actData$date <- as.Date(actData$date)
totDailySteps <- tapply(actData$steps, actData$date, sum)
totDailyMean <- mean(totDailySteps)
totDailyMedian <- median(totDailySteps)
## hist(totDailySteps)
totIntMean <- tapply(actData$steps, actData$interval, mean)
maxIntName <- names(totIntMean[totIntMean==max(totIntMean)])
plot(names(totIntMean), totIntMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
library(plyr)
##missSteps <- sum(is.na(rawActData$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
totImpDailySteps <- tapply(impActData$steps, impActData$date, sum)
totImpDailyMean <- mean(totDailySteps)
totImpDailyMedian <- median(totDailySteps)
## hist(totImpDailySteps)
impActData <- cbind(impActData, dow="weekday")
impActData$dow <- as.character(impActData$dow)
logDow <- (weekdays(impActData$date)=="Saturday" |
weekdays(impActData$date)=="Sunday")
impActData[logDow,]$dow <- "weekend"
impActData$dow <- as.factor(impActData$dow)
impDayData <- subset(impActData, dow=="weekday")
impEndData <- subset(impActData, dow=="weekend")
totDayMean <- tapply(impDayData$steps, impDayData$interval, FUN=mean)
totENDMean <- tapply(impEndData$steps, impEndData$interval, FUN=mean)
par(mfrow=c(1.2))
plot(names(totDayMean), totDayMean, type="l", xlab="5-minute interval", ylab="average number of Weekday steps")
plot(names(totEndMean), totEndMean, type="l", xlab="5-minute interval", ylab="average number of Weekend steps")
library(lattice)
library(ggplot2)
qplot(totDayMean)
qplot(names(totDayMean), totDayMean)
qplot(totDayMean)
qplot(names(totDayMean), totDayMean)
qplot(interval, mean(steps), data=totDayMean)
par(mfrow=c(1.2))
plot(names(totDayMean), totDayMean, type="l", xlab="5-minute interval", ylab="average number of Weekday steps")
plot(names(totEndMean), totEndMean, type="l", xlab="5-minute interval", ylab="average number of Weekend steps")
totEndMean <- tapply(impEndData$steps, impEndData$interval, FUN=mean)
par(mfrow=c(1.2))
plot(names(totDayMean), totDayMean, type="l", xlab="5-minute interval", ylab="average number of Weekday steps")
plot(names(totEndMean), totEndMean, type="l", xlab="5-minute interval", ylab="average number of Weekend steps")
par(mfrow=c(1,2))
plot(names(totDayMean), totDayMean, type="l", xlab="5-minute interval", ylab="average number of Weekday steps")
plot(names(totEndMean), totEndMean, type="l", xlab="5-minute interval", ylab="average number of Weekend steps")
rawActData <- read.csv("activity.csv")
rawActData$date <- as.Date(rawActData$date)
complete <- complete.cases(rawActData)
actData <- rawActData[complete,]
actData$date <- as.Date(actData$date)
totDailySteps <- tapply(actData$steps, actData$date, sum)
totDailyMean <- mean(totDailySteps)
totDailyMedian <- median(totDailySteps)
## hist(totDailySteps)
totIntMean <- tapply(actData$steps, actData$interval, mean)
maxIntName <- names(totIntMean[totIntMean==max(totIntMean)])
plot(names(totIntMean), totIntMean, type="l", xlab="5-minute interval", ylab="average number of steps", main="Average Daily Activity Pattern")
library(plyr)
##missSteps <- sum(is.na(rawActData$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
impActData <- ddply(rawActData, ~ interval, transform, steps = impute.mean(steps))
totImpDailySteps <- tapply(impActData$steps, impActData$date, sum)
totImpDailyMean <- mean(totDailySteps)
totImpDailyMedian <- median(totDailySteps)
## hist(totImpDailySteps)
impActData <- cbind(impActData, dow="weekday")
impActData$dow <- as.character(impActData$dow)
logDow <- (weekdays(impActData$date)=="Saturday" |
weekdays(impActData$date)=="Sunday")
impActData[logDow,]$dow <- "weekend"
impActData$dow <- as.factor(impActData$dow)
impDayData <- subset(impActData, dow=="weekday")
impEndData <- subset(impActData, dow=="weekend")
totDayMean <- tapply(impDayData$steps, impDayData$interval, FUN=mean)
totEndMean <- tapply(impEndData$steps, impEndData$interval, FUN=mean)
par(mfrow=c(2,1))
plot(names(totDayMean), totDayMean, type="l", xlab="5-minute interval", ylab="average number of Weekday steps")
plot(names(totEndMean), totEndMean, type="l", xlab="5-minute interval", ylab="average number of Weekend steps")
density(mean(impActData$steps) | impActData$interval)
str(impActData)
density(~mean(impActData$steps) | impActData$interval)
density(impActData$steps | impActData$interval)
xyploy(totDayMean)
xyplot(totDayMean)
class(totDayMean)
str(totDayMean)
xyplot(as.numeric(totDayMean))
as.numeric(totDayMean)
par("cin")
range(totDayMean)
range(totEndMean)
